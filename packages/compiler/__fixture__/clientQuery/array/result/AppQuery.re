/* Generated by ReasonQL Compiler, PLEASE EDIT WITH CARE */

/* Original Query
query AppQuery {
  i1
  i2
  i3
  i4
  p1 {
    id
    name
  }
  p2 {
    name
  }
  p3 {
    id
  }
  p4 {
    id
    name
  }
}
*/
let query = {|query AppQuery{i1
i2
i3
i4
p1{id
name}p2{name}p3{id}p4{id
name}}|}

type p1 = {
  id: string,
  name: string,
};

type p2 = {
  name: string,
};

type p3 = {
  id: string,
};

type p4 = {
  id: string,
  name: string,
};

type queryResult = {
  i1: option(array(option(int))),
  i2: array(option(int)),
  i3: option(array(int)),
  i4: array(int),
  p1: option(array(option(p1))),
  p2: array(option(p2)),
  p3: option(array(p3)),
  p4: array(p4),
};

type variablesType = Js.Dict.t(Js.Json.t);

[%%raw {|
var encodeVariables = function (res) {
  return {}
}
|}]

[@bs.val]external encodeVariablesJs: variablesType => Js.Json.t = "encodeVariables";
let encodeVariables = encodeVariablesJs;

[%%raw {|
var decodeP1 = function (res) {
  return [
    res.id,
    res.name,
  ]
}

var decodeP2 = function (res) {
  return [
    res.name,
  ]
}

var decodeP3 = function (res) {
  return [
    res.id,
  ]
}

var decodeP4 = function (res) {
  return [
    res.id,
    res.name,
  ]
}

var decodeQueryResult = function (res) {
  return [
    res.i1,
    res.i2,
    res.i3,
    res.i4,
    res.p1 ? decodeP1Array(res.p1) : undefined,
    decodeP2Array(res.p2),
    res.p3 ? decodeP3Array(res.p3) : undefined,
    decodeP4Array(res.p4),
  ]
}

var decodeP1Array = function (arr) {
  return arr.map(item =>
    item ? decodeP1(item) : undefined
  )
}

var decodeP2Array = function (arr) {
  return arr.map(item =>
    item ? decodeP2(item) : undefined
  )
}

var decodeP3Array = function (arr) {
  return arr.map(item =>
    decodeP3(item)
  )
}

var decodeP4Array = function (arr) {
  return arr.map(item =>
    decodeP4(item)
  )
}
|}]

[@bs.val]external decodeQueryResultJs: Js.Json.t => queryResult = "decodeQueryResult";
let decodeQueryResult = decodeQueryResultJs;