/* Generated by ReasonQL Compiler, PLEASE EDIT WITH CARE */

/* Original Query
mutation CalcLengthMutation($points: [Point!]!) {
  calcLength(points: $points)
}
*/
let query = {|mutation CalcLengthMutation($points:[Point!]!){calcLength(points:$points)}|}

type queryResult = {
  calcLength: float,
};

type point = {
  x: int,
  y: int,
};

type variablesType = {
  points: array(point),
};

[%%raw {|
var encodePoint = function (v) {
  return {
    x: v[0],
    y: v[1],
  }
}

var encodeVariables = function (v) {
  return {
    points: encodePointArray(v[0]),
  }
}

var encodePointArray = function (ar) {
  let r = [];
  ar.forEach(v =>
    r.push(encodePoint(v))
  );
  return r;
}
|}]

[@bs.val]external encodeVariablesJs: variablesType => Js.Json.t = "encodeVariables";
let encodeVariables = encodeVariablesJs;

[%%raw {|
var decodeQueryResult = function (res) {
  return [
    res.calcLength,
  ]
}
|}]

[@bs.val]external decodeQueryResultJs: Js.Json.t => queryResult = "decodeQueryResult";
let decodeQueryResult = decodeQueryResultJs;