/* Generated by ReasonQL Compiler, PLEASE EDIT WITH CARE */

/* Original Query
query TestEnum($size: PatchSize) {
  planet {
    name
    imageSize
  }
  mission {
    name
    missionPatch(size: $size)
  }
}
*/
let query = {|query TestEnum($size:PatchSize){planet{name
imageSize}mission{name
missionPatch(size:$size)}}|}

type planet = {
  name: string,
  imageSize: EnumTypes.patchSize,
};

type mission = {
  name: string,
  missionPatch: string,
};

type queryResult = {
  planet: planet,
  mission: mission,
};

type variablesType = {
  size: option(EnumTypes.patchSize),
};

[%%raw {|
const { encodePatchSize } = require('./EnumTypes.bs');

var encodeVariables = function (v) {
  return {
    size: encodePatchSize(v[0]),
  }
}
|}]

[@bs.val]external encodeVariablesJs: variablesType => Js.Json.t = "encodeVariables";
let encodeVariables = encodeVariablesJs;

[%%raw {|
const { decodePatchSize } = require('./EnumTypes.bs');

var decodePlanet = function (res) {
  return [
    res.name,
    decodePatchSize(res.imageSize),
  ]
}

var decodeMission = function (res) {
  return [
    res.name,
    res.missionPatch,
  ]
}

var decodeQueryResult = function (res) {
  return [
    decodePlanet(res.planet),
    decodeMission(res.mission),
  ]
}
|}]

[@bs.val]external decodeQueryResultJs: Js.Json.t => queryResult = "decodeQueryResult";
let decodeQueryResult = decodeQueryResultJs;